!function(){"use strict";const e={addPrevToDescription:!0,framesPerSection:6,textsPerSection:8,notificationTimeout:6e3,updateUsingLocalStyles:!1,partialMatch:!1,fillerPrefix:"",fillerSuffix:"",strokeerPrefix:"",strokeerSuffix:"-stroke",effecterPrefix:"",effecterSuffix:"",griderPrefix:"",griderSuffix:"",texterPrefix:"",texterSuffix:""},t=figma.command,i={applied:0,created:0,customize:0,detached:0,extracted:0,generated:0,textContainer:0,miscContainer:0,ignored:0,renamed:0,removed:0,updated:0},s=e=>({applied:{empty:"🤔 No local style found to apply. Maybe? Renam...",single:`✌️ Applied only ${e.applied} style. He he...`,multiple:`✌️ Applied ${e.applied} styles. He he...`},detached:{empty:"🤔 No style was applied on any of the selected layers. Idk...",single:`💔 Detached only ${e.detached} style. Layers will miss you...`,multiple:`💔 Detached ${e.detached} styles. Layers will miss you...`},extracted:{empty:"😵 No local style found to extract. Ouch...",single:`😺 Created only ${e.extracted} layer. Uhuu...`,multiple:`😺 Created ${e.extracted} layers. Uhuu...`},generated:{empty:"😭 We do not support empty or mixed properties. Oh, Noo...",multiple:`\n      🔨 Created: ${e.created} -\n      ✨ Updated: ${e.updated} -\n      👻 Renamed: ${e.renamed} -\n      😶 No changes: ${e.ignored}\n    `},removed:{empty:"🤔 No local style was applied on any of the selected layers. Yep, it's not weird...",single:`🔥 Removed only ${e.removed} style. Rrr...`,multiple:`🔥 Removed ${e.removed} styles. Rrr...`},customize:{empty:"🌟 Settings were saved, but there was nothing to update.",single:"✅ Settings were saved and only 1 style was updated.",multiple:`✅ Settings were saved and ${e.customize} style was updated.`},layers:{empty:"😎 You must select at least 1 layer. Yea..."},cancelSettings:{empty:"🥺 Nothing was changed, everything is as before."},clearCache:{empty:"🧹 Cleaned saved settings from cache."}}),r=(e=0,t={empty:"",single:void 0,multiple:""},i)=>{const{empty:s,multiple:r,single:a=r}=t;0===e?(figma.notify(s,{timeout:i}),figma.closePlugin()):1===e?(figma.notify(a,{timeout:i}),figma.closePlugin()):(figma.notify(r,{timeout:i}),figma.closePlugin())},a=(t,a={})=>{const{layerIndex:o=0,layersLength:n=1,stylerIndex:l=0,stylersLength:c=1,notificationTimeout:y=e.notificationTimeout}=a;o===n-1&&l===c-1&&r(i[t],s(i)[t],y)},o={white:[255,255,255,1],black:[0,0,0,1],transparent:[0,0,0,0]},n=e=>e[0].toLocaleUpperCase()+e.slice(1).toLocaleLowerCase(),l=(e,t="",i="")=>t+e+i,c=e=>0===(e||[]).length;function y(e){const t=typeof e;if("undefined"===t||"number"===t||"string"===t||"boolean"===t||"symbol"===t||null===e)return e;if("object"===t){if(e instanceof Array)return e.map(y);if(e instanceof Uint8Array)return new Uint8Array(e);{const t={};for(const i in e)t[i]=y(e[i]);return t}}throw"unknown"}const f=(e,t)=>{let i=e.type;if("PAINT"===e.type){i="FILL";const{filler:s,strokeer:r}=t;[s,r].map((t=>{""===t.prefix&&""===t.suffix||!t.checkAffix(e)||(i=t.layerPropType)}))}return i};class p{constructor(s={}){this.applyStyle=(e,t)=>{t&&void 0!==e[this.layerStyleID]&&e[this.layerStyleID]!==t.id?(e[this.layerStyleID]=t.id,i.applied++):console.log(`Apply: ${this.layerStyleID} not found || No style found for ${e.name}`)},this.createStyle=(e,t)=>{let i=figma[this.createStyleCommand]();return this.renameStyle(e,i),this.updateStyle(e,i,t),i},this.changeStyleDescription=(e,t)=>{const i=e.description||"",s="Previous style:",r=i.lastIndexOf(s),a=i.slice(0,r)+`${s}\n${(null==t?void 0:t.name)||""}`;return e.description=t?a:i},this.detachStyle=e=>{e[this.layerStyleID]?(e[this.layerStyleID]="",i.detached++):console.log(`Detach: ${this.layerPropType} not found.`)},this.getLocalStyles=()=>figma[this.getLocalStylesCommand](),this.getStyleById=e=>figma.getStyleById(e[this.layerStyleID]),this.getStyleByName=(t,i=e.partialMatch)=>{const s=this.getLocalStyles(),r=s.find((e=>e.name===l(t,this.prefix,this.suffix)));return r||(!0===i?s.find((e=>t.split(/\W+/g).find((t=>e.name.includes(t))))):void 0)},this.renameStyle=(e,t)=>{t?t.name=l(e.name,this.prefix,this.suffix):console.log(`Rename: No style found for ${e.name}`)},this.updateStyle=(e,t,i,s=null)=>{i&&this.changeStyleDescription(t,s),this.detachStyle(e),this.styleProps.map(((i,s)=>{t&&!this.isPropEmpty(e)?t[i]=e[this.layerProps[s]]:console.log(`Update: ${this.layerProps[s]} not found || No style found for ${e.name}`)})),this.applyStyle(e,t)},this.removeStyle=(e,s)=>{if(!s||!0===s.remote)return;const r=t.split("-")[1];r!==this.layerPropType.toLocaleLowerCase()&&"all"!==r||(this.detachStyle(e),s.remove(),i.removed++)},this.generateStyle=(t,s)=>{const{styleIdMatch:r,styleNameMatch:a,updateUsingLocalStyles:o=e.updateUsingLocalStyles,addPrevToDescription:n=e.addPrevToDescription}=s;this.isPropEmpty(t)||this.isPropMixed(t)?console.log("Generate: We have some mixed or empty props."):(r&&!(null==r?void 0:r.remote)||a?r&&!(null==r?void 0:r.remote)||!a||!1!==o?r!==a&&!1===o?(this.renameStyle(t,r),i.renamed++):!r||(null==r?void 0:r.remote)||a||!0!==o?r!==a&&!0===o?(this.updateStyle(t,a,n,r),i.updated++):i.ignored++:(this.renameStyle(t,r),i.renamed++):(this.updateStyle(t,a,n,r),i.updated++):(this.createStyle(t,n),i.created++),i.generated++)},this.isPropEmpty=e=>c(e[this.layerProps[0]]),this.isPropMixed=e=>this.layerProps.some((t=>e[t]===figma.mixed)),this.checkAffix=e=>e.name.startsWith(this.prefix)&&e.name.endsWith(this.suffix),this.replacePrefix=(e,t="")=>e.startsWith(this.prefix)?t+e.slice(this.prefix.length):e,this.replaceSuffix=(e,t="")=>e.endsWith(this.suffix)?e.slice(0,e.lastIndexOf(this.suffix))+t:e,this.replaceAffix=(e,t="",i=t)=>(e=this.replacePrefix(e,t),e=this.replaceSuffix(e,i));const{name:r="styler",styleType:a="",layerPropType:o=a,prefix:y="",suffix:f="",styleProps:p,layerProps:d}=s;this.name=r,this.styleType=a.toLocaleUpperCase(),this.styleProps=p||d,this.layerProps=d||p,this.layerPropType=o.toLocaleUpperCase(),this.layerStyleID=l(o.toLocaleLowerCase(),"","StyleId"),this.prefix=y,this.suffix=f,this.createStyleCommand=l(n(a),"create","Style"),this.getLocalStylesCommand=l(n(a),"getLocal","Styles")}}const d="cachedSettings";class m{constructor(t=e){const{addPrevToDescription:i=e.addPrevToDescription,framesPerSection:s=e.framesPerSection,textsPerSection:r=e.textsPerSection,notificationTimeout:a=e.notificationTimeout,updateUsingLocalStyles:o=e.updateUsingLocalStyles,partialMatch:n=e.partialMatch,texterPrefix:l=e.texterPrefix,texterSuffix:c=e.texterSuffix,griderPrefix:y=e.griderPrefix,griderSuffix:f=e.griderSuffix,fillerPrefix:d=e.fillerPrefix,fillerSuffix:m=e.fillerSuffix,strokeerPrefix:h=e.strokeerPrefix,strokeerSuffix:u=e.strokeerSuffix,effecterPrefix:g=e.effecterPrefix,effecterSuffix:x=e.effecterSuffix}=t;this.addPrevToDescription=i,this.framesPerSection=s,this.textsPerSection=r,this.notificationTimeout=a,this.updateUsingLocalStyles=o,this.partialMatch=n,this.texter=new p({name:"texter",styleType:"text",styleProps:["fontName","fontSize","letterSpacing","lineHeight","paragraphIndent","paragraphSpacing","textCase","textDecoration"],prefix:l,suffix:c}),this.grider=new p({name:"grider",styleType:"grid",styleProps:["layoutGrids"],prefix:y,suffix:f}),this.filler=new p({name:"filler",styleType:"paint",styleProps:["paints"],layerProps:["fills"],layerPropType:"fill",prefix:d,suffix:m}),this.strokeer=new p({name:"strokeer",styleType:"paint",styleProps:["paints"],layerProps:["strokes"],layerPropType:"stroke",prefix:h,suffix:u}),this.effecter=new p({name:"effecter",styleType:"effect",styleProps:["effects"],prefix:g,suffix:x}),this.allStylers=[this.texter,this.filler,this.strokeer,this.effecter,this.grider],this.stylersWithoutTexter=[this.filler,this.strokeer,this.effecter,this.grider],this.texterOnly=[this.texter]}}function h(e,t,i,s){return new(i||(i=Promise))((function(r,a){function o(e){try{l(s.next(e))}catch(e){a(e)}}function n(e){try{l(s.throw(e))}catch(e){a(e)}}function l(e){var t;e.done?r(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(o,n)}l((s=s.apply(e,t||[])).next())}))}const u=["r","g","b"];const g=(e,t,i=[0,0,0,1])=>{const s=function(e){const t={};return u.forEach(((i,s)=>{t[i]=e[s]/255})),void 0!==e[3]&&(t.a=e[3]),t}(i),{r:r,g:a,b:o,a:n}=s,l=y(e[t]);return l[0].color={r:r,g:a,b:o},l[0].opacity=n,e[t]=l},x=(e="TextLayer",t=figma.currentPage,i={})=>h(void 0,void 0,void 0,(function*(){const{color:s=o.transparent,xPos:r=0,yPos:a=r}=i,n=figma.createText();return yield figma.loadFontAsync(n.fontName),n.name=e,n.characters=e,s&&g(n,"fills",s),n.x=r,n.y=a,t.appendChild(n),n})),S=(e="FrameLayer",t=figma.currentPage,i={})=>{const{color:s=o.transparent,layoutProps:r={},size:a=80,width:n=a,height:l=n,xPos:c=0,yPos:y=c,cornerRadius:f=12}=i,p=figma.createFrame();return p.name=e,s&&g(p,"fills",s),p.x=c,p.y=y,p.resize(n,l),p.cornerRadius=f,t.appendChild(p),((e,t={})=>{const{layoutMode:i="NONE",layoutAlign:s="MIN",counterAxisSizingMode:r="AUTO",horizontalPadding:a=0,verticalPadding:o=0,itemSpacing:n=0}=t;if(e)e.layoutMode=i,e.layoutAlign=s,e.counterAxisSizingMode=r,e.horizontalPadding=a,e.verticalPadding=o,e.itemSpacing=n})(p,r),p},P=(e="Layer",t=figma.currentPage,i="PAINT",s={})=>h(void 0,void 0,void 0,(function*(){const r={TEXT:x,GRID:S,PAINT:S,EFFECT:S};return yield r[i](e,t,s)})),T=e=>{const{addPrevToDescription:o,allStylers:n,notificationTimeout:l,texterOnly:y,partialMatch:f,updateUsingLocalStyles:p}=e,d=(()=>{const e=figma.currentPage.selection.filter((e=>(e=>["FRAME","COMPONENT","INSTANCE"].includes(e.type))(e)||(e=>["RECTANGLE","ELLIPSE","POLYGON","STAR","VECTOR"].includes(e.type))(e)||(e=>"TEXT"===e.type)(e))),t=Object.values((i="parent",e.reduce(((e,t)=>((e[t[i]]=e[t[i]]||[]).push(t),e)),{})));var i;const s=[];return t.map((e=>{const t=[...e].sort(((e,t)=>e.parent.children.indexOf(e)-t.parent.children.indexOf(t)));s.push(t)})),s.flat().reverse()})();if(c(d))return void r(0,s(i).layers,l);const m=d.length;d.map(((e,i)=>h(void 0,void 0,void 0,(function*(){let s=n;const r=e.name;"TEXT"===e.type&&(yield figma.loadFontAsync(e.fontName),"+"!==e.name[0]?s=y:e.name=e.name.slice(1));const c=s.length;s.map(((s,r)=>{const n={layerIndex:i,layersLength:m,stylerIndex:r,stylersLength:c,notificationTimeout:l},y=s.getStyleById(e),d=s.getStyleByName(e.name,f);"generate-all-styles"===t?(s.generateStyle(e,{styleNameMatch:d,styleIdMatch:y,updateUsingLocalStyles:p,addPrevToDescription:o}),a("generated",n)):"apply-all-styles"===t?(s.applyStyle(e,d),a("applied",n)):"detach-all-styles"===t?(s.detachStyle(e),a("detached",n)):t.includes("remove")?(s.removeStyle(e,y),a("removed",n)):figma.closePlugin("🤷‍♂️ This should not happen. Nothing was changed...")})),e.name=r}))))},v=e=>h(void 0,void 0,void 0,(function*(){const{allStylers:t,framesPerSection:s,textsPerSection:r}=e;if(c([...figma.getLocalTextStyles(),...figma.getLocalGridStyles(),...figma.getLocalPaintStyles(),...figma.getLocalEffectStyles()]))return;const a={layoutProps:{layoutMode:"HORIZONTAL",itemSpacing:32}},n={layoutProps:{layoutMode:"VERTICAL",itemSpacing:32}},l=S("main",void 0,{layoutProps:{layoutMode:"HORIZONTAL",itemSpacing:128}}),y=S("text",l,a),p=S("misc",l,n);let d,m=[];for(const l of t){const t=l.getLocalStyles();if(c(t))continue;const u="TEXT"===l.styleType?y:p,g="TEXT"===l.styleType?n:a,x="TEXT"===l.styleType?r:s,T="TEXT"===l.styleType?{color:o.black}:{size:80,color:o.white};yield Promise.all(t.map(((t,s)=>h(void 0,void 0,void 0,(function*(){if(t.type!==l.styleType||f(t,e)!==l.layerPropType)return;const r=l.replaceAffix(t.name,"");let a=m.find((e=>e.name===r));a||(s%x==0&&(d=S("section",u,g)),a=yield P(r,d,t.type,T),m.push(a),i.extracted++),l.applyStyle(a,t)})))))}yield new Promise((e=>setTimeout(e,100))),figma.group(m,figma.currentPage),m.map((e=>(e=>e.parent.parent.appendChild(e))(e))),figma.viewport.scrollAndZoomIntoView(m),l.remove()}));let L;figma.clientStorage.getAsync(d).then((e=>{L=new m(e);const{notificationTimeout:a}=L;"clear-cache"===t?figma.clientStorage.setAsync(d,void 0).then((()=>{r(0,s(i).clearCache,L.notificationTimeout)})):"extract-all-styles"===t?v(L).then((()=>r(i.extracted,s(i).extracted,a))):"customize-plugin"===t?(figma.showUI(__html__,{width:320,height:424}),figma.ui.postMessage(e),figma.ui.onmessage=e=>{"cancel-modal"===e.type?r(0,s(i).cancelSettings,a):"save-settings"===e.type&&figma.clientStorage.setAsync(d,e.uiSettings).then((()=>{const t=new m(e.uiSettings);((e,t)=>{const{allStylers:s}=e;s.map((s=>{const r=s.getLocalStyles();c(r)||r.map((r=>{if(r.type!==s.styleType||f(r,e)!==s.layerPropType)return;const{name:a}=s,o=t[a].prefix,n=t[a].suffix;o===s.prefix&&n===s.suffix||(r.name=s.replaceAffix(r.name,o,n),i.customize++)}))}))})(L,t),r(i.customize,s(i).customize,t.notificationTimeout)}))}):T(L)}))}();
